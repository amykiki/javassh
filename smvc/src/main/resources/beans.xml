<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd"
>
    <import resource="classpath:spring-cache.xml"/>
    <import resource="classpath:spring-shiro-web.xml"/>
    <!--打开spring annotation支持-->
    <context:annotation-config/>
    <context:component-scan base-package="org.mybatis.smvc.service,org.mybatis.smvc.mapper"/>
    <!--属性占位符 PropertyPlaceholderConfigurer-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <context:property-placeholder location="classpath:app.properties" ignore-unresolvable="true"/>
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="org.mybatis.smvc.formatter.PhoneNumFormatAnnotationFormatterFactory"/>
            </set>
        </property>
    </bean>
    <!--配置数据源Data Source Configuration-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="connectionProperties" value="${mysql.connectionProperties}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
        <property name="maxTotal" value="${dbcp2.maxTotal}"/>
        <property name="maxIdle" value="${dbcp2.maxIdle}"/>
        <property name="minIdle" value="${dbcp2.minIdle}"/>
        <property name="initialSize" value="${dbcp2.initialSize}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${dbcp2.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${dbcp2.minEvictableIdleTimeMillis}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="org.mybatis.smvc.entity"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="BATCH"/>
    </bean>

    <!--Register Mybatis Mapper-->
    <mybatis:scan base-package="org.mybatis.smvc.mapper" template-ref="sqlSession"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置哪些方法要加入事务管理-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!--让所有方法都加入事务管理，为了提高效率，可以把一些查询之类的方法设为只读-->
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
            <!-- 一下方法都是可能设计为要修改的方法，所以无法设为只读-->
            <tx:method name="add*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!--配置AOP，Spring是通过AOP管理事务-->
    <aop:config>
        <!--设置pointcut表示哪些方法需要加入事务处理-->
        <!--通常都会在Service来处理多个业务对象逻辑的关系，注入删除，更新等，此时如果在执行了一个步骤之后抛出异常就会导致数据不完整，所以事务不应该在DAO层处理，而应该在service-->
        <aop:pointcut id="allMethods" expression="execution(* org.mybatis.smvc.service.*.*(..)) and !execution(* org.mybatis.smvc.service.*.cache*(..))"/>
        <!--通过advisor确定具体要加入事务管理的方法-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allMethods"/>
    </aop:config>

    <aop:aspectj-autoproxy/>
    <bean class="org.mybatis.smvc.aspect.UpdateCacheList"/>
</beans>

